name: Java CI with Maven
on:
  push:
    branches: [ "master", "dev" ]

jobs:
  Version:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}  # Use PAT or GITHUB_TOKEN for authentication



    - name: Fetch last tags and set version
      id: version
      run: |
          git fetch --tags
          VERSION=$(git tag | sort -V | tail -n 1)
          echo "My Latest version: $VERSION"
          
          VERSION_PARTS=(${VERSION//./ })
          MAJOR=${VERSION_PARTS[0]}
          MINOR=${VERSION_PARTS[1]}
          PATCH=${VERSION_PARTS[2]}
          
          NEW_PATCH_NUM=$((PATCH + 1))
          NEW_VERSION="${MAJOR}.${MINOR}.${NEW_PATCH_NUM}"
          
          # Set the new version in Maven
          mvn versions:set -DnewVersion=$NEW_VERSION
          
          # Set the new version in GITHUB_ENV for future steps
          echo "new_version=$NEW_VERSION" >> $GITHUB_ENV
          
          # Set the output for GitHub Actions steps
          echo "::set-output name=new_version::$NEW_VERSION"
          
          echo "Final new_version=$NEW_VERSION"

          - name: Push new tag
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Use the GitHub token for git push
            run: |
              # Retrieve the new version from the environment
              NEW_TAG=${{ env.new_version }}
              
              # Create the tag
              git tag $NEW_TAG
              
              # Push the new tag to the repository
              git push origin $NEW_TAG

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Docker Build and Run
      run: |
        docker build -t my_app:${{ steps.version.outputs.new_version }} .
        docker run my_app:${{ steps.version.outputs.new_version }}

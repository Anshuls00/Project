name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  check-and-build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Run Snyk to check for vulnerabilities
      uses: snyk/actions/maven@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=critical

    - name: Extract current version and increment
      run: |
        CURRENT_VERSION=$(grep -oPm1 "(?<=<version>)[^<]+" pom.xml)
        echo "current_version=$CURRENT_VERSION" >> $GITHUB_ENV
        IFS='-' read -r version snapshot <<< "$CURRENT_VERSION"
        IFS='.' read -r major minor patch <<< "$version"
        new_patch=$((patch + 1))
        new_version="$major.$minor.$new_patch-SNAPSHOT"
        echo "new_version=$new_version" >> $GITHUB_ENV
        sed -i "0,/<version>/s|<version>.*</version>|<version>$new_version</version>|" pom.xml

    - name: Add and commit new version
      uses: EndBug/add-and-commit@v9
      with:
        add: 'pom.xml'
        fetch: false
        message: 'Updating pom.xml version. [skip ci]'
        push: true

    - name: Run Snyk scan on Dockerfile
      uses: snyk/actions/dockerfile@master
      env:
        SNYK_TOKEN: ${{ SNYK_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build, test, and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: Dockerfile
        platforms: linux/amd64
        push: true
        tags: |
            ghcr.io/arinmoyal/my-app:${{ github.sha }}
            ghcr.io/arinmoyal/my-app:latest

    - name: Deploy
      run: |
          docker run --rm ghcr.io/arinmoyal/my-app:latest
